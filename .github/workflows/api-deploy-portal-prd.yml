name: api-deploy-portal-prd

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        type: string
      RUNS_ON:
        type: string
        default: ubuntu-latest

    secrets:
      ARTIFACTORY_NPM_REGISTRY:
        required: true
      ARTIFACTORY_AUTH:
        required: true
      ARTIFACTORY_EMAIL:
        required: true

      AWS_ACCESS_KEY_ID_PRD:
        required: true
      AWS_SECRET_ACCESS_KEY_PRD:
        required: true
      AWS_REGION_PRD:
        required: true

      DATABASE_HOST_PRD:
        required: false
      DATABASE_USERNAME_PRD:
        required: false
      DATABASE_PASSWORD_PRD:
        required: false
      DATABASE_NAME_PRD:
        required: false

      NAVEGA_API_URL_PRD:
        required: false
      NAVEGA_PORTAL_API_URL_PRD:
        required: false

      ENV_PRD:
        required: true
      LOG_LEVEL_PRD:
        required: true
      DD_API_KEY:
        required: true

jobs:
  deploy-prd:
    if: github.ref == 'refs/heads/main'
    runs-on: ${{ inputs.RUNS_ON }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      DATABASE_HOST: ${{secrets.DATABASE_HOST_PRD}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME_PRD}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD_PRD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME_PRD}}

      NAVEGA_API_URL: ${{secrets.NAVEGA_API_URL_PRD}}
      NAVEGA_PORTAL_API_URL: ${{secrets.NAVEGA_PORTAL_API_URL_PRD}}

      LOG_LEVEL: ${{secrets.LOG_LEVEL_PRD}}
      DD_API_KEY: ${{secrets.DD_API_KEY}}
      ENV: ${{secrets.ENV_PRD}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Setup Jfrog
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          npm config set registry ${{secrets.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{secrets.ARTIFACTORY_EMAIL}}"
          npm config set -- 'always-auth' "true"

      - name: Install & Build Libs
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          sh ../build-libs.sh

      - name: Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn install

      - name: Production Deploy
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          export AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID_PRD}}
          export AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY_PRD}}
          export AWS_REGION=${{secrets.AWS_REGION_PRD}}
          npm i -g serverless
          sls deploy --stage ${{secrets.ENV_PRD}}
