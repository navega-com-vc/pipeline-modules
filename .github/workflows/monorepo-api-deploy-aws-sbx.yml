name: api-deploy-sbx

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        type: string
      RUNS_ON:
        type: string
        default: ubuntu-latest
    secrets:
      ARTIFACTORY_AUTH:
        required: true
      AWS_SECRET_ACCESS_KEY_SBX:
        required: true
      DATABASE_PASSWORD_SBX:
        required: false
      DD_API_KEY:
        required: true
      KEYCLOAK_PASSWORD_ADMIN_SBX:
        required: false
jobs:
  deploy-sbx:
    if: github.ref == 'refs/heads/sbx'
    runs-on: ${{ inputs.RUNS_ON }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      DATABASE_HOST: ${{vars.DATABASE_HOST_SBX}}
      DATABASE_USERNAME: ${{vars.DATABASE_USERNAME_SBX}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD_SBX}}
      DATABASE_NAME: ${{vars.DATABASE_NAME_SBX}}

      DATABASE_DATA_SOURCE: ${{ vars.DATABASE_DATA_SOURCE_SBX }}
      DATABASE_API_URL: ${{ vars.DATABASE_API_URL }}
      DATABASE_API_KEY: ${{ secrets.DATABASE_API_KEY_SBX }}

      KEYCLOAK_URL: ${{vars.KEYCLOAK_URL_SBX}}
      KEYCLOAK_USERNAME_ADMIN: ${{vars.KEYCLOAK_USERNAME_ADMIN_SBX}}
      KEYCLOAK_PASSWORD_ADMIN: ${{secrets.KEYCLOAK_PASSWORD_ADMIN_SBX}}

      SUBNET_APP_A: ${{vars.SUBNET_APP_A_SBX}}
      SUBNET_APP_B: ${{vars.SUBNET_APP_B_SBX}}
      SECURITY_GROUP_API: ${{vars.SECURITY_GROUP_API_SBX}}

      NAVEGA_API_URL: ${{vars.NAVEGA_API_URL_SBX}}

      LOG_LEVEL: ${{vars.LOG_LEVEL_SBX}}
      DD_API_KEY: ${{secrets.DD_API_KEY}}
      ENV: ${{vars.ENV_SBX}}

      AWS_DYNAMODB_REGION: ${{vars.AWS_REGION_SBX}}
      AWS_DYNAMODB_VERSION: ${{vars.AWS_DYNAMODB_VERSION_SBX}}
      AWS_DYNAMODB_MIRRORED_DOCUMENTS_TABLE: ${{vars.AWS_DYNAMODB_MIRRORED_DOCUMENTS_TABLE_SBX}}

      EMAIL_PROVIDER: ${{ vars.EMAIL_PROVIDER_DEV }}
      EMAIL_USERNAME: ${{ vars.EMAIL_USERNAME_DEV }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD_DEV }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0

      - name: Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          cd ..
          npm config set registry ${{vars.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '//f3capital.jfrog.io/artifactory/api/npm/f3capital-npm/:_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{vars.ARTIFACTORY_EMAIL}}"
          echo "always-auth=true" >> ~/.npmrc
          cp ~/.npmrc ./.npmrc
          yarn install
          yarn build

      - name: Sandbox Deploy
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          export VERSION=$(node -p "require('./package.json').version")
          export AWS_ACCESS_KEY_ID=${{vars.AWS_ACCESS_KEY_ID_SBX}}
          export AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY_SBX}}
          export AWS_REGION=${{vars.AWS_REGION_SBX}}
          npm i -g serverless@3
          sls deploy --force --stage ${{vars.ENV_SBX}} --region $AWS_REGION
