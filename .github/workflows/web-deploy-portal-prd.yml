name: web-deploy-portal-prd

on:
  workflow_call:
    inputs:
      WORKING_DIRECTORY:
        type: string
      BUCKET_PATH:
        type: string
        required: true

jobs:
  deploy-prd:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    env:
      PORTAL_SHELL_MANIFEST: /assets/mf.manifest.json
      PORTAL_API_URL: ${{ vars.NAVEGA_PORTAL_API_URL_PRD }}
      DATADOG_APPLICATION_ID: ${{ vars.DD_NAVEGA_PORTAL_APPLICATION_ID_PRD }}
      DATADOG_CLIENT_TOKEN: ${{ secrets.DD_NAVEGA_PORTAL_CLIENT_TOKEN_PRD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Jfrog
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          npm config set registry ${{vars.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '//f3capital.jfrog.io/artifactory/api/npm/f3capital-npm/:_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{vars.ARTIFACTORY_EMAIL}}"
          echo "always-auth=true" >> ~/.npmrc

      - name: Install & Build Commons
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          cd ../libs/navega-portal-common && yarn install && yarn build

      - name: Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn install

      - name: Build
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn build

      - name: Setup AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID_PRD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRD }}
          aws-region: ${{ vars.AWS_REGION_PRD }}

      - name: Production Deploy
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          aws s3 sync dist/ s3://${{inputs.BUCKET_PATH}} --delete
          aws cloudfront create-invalidation --distribution-id=E2IM1GJWPYHE1F --paths "/*"
