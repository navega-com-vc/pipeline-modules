name: quality-workflow

on:
  workflow_call:
    inputs:
      RUNS_ON:
        type: string
        default: ubuntu-latest
      CANCEL_IN_PROGRESS:
        type: boolean
        default: true
      SKIP_LINT:
        type: boolean
        default: false
      SKIP_AUDIT:
        type: boolean
        default: false
      SKIP_TESTS:
        type: boolean
        default: false
      CONTINUE_ON_SONARQUBE_ERROR:
        type: boolean
        default: false
      WORKING_DIRECTORY:
        type: string

jobs:
  quality:
    if: ${{ !contains(fromJson('["dev", "stg", "pre-sbx", "sbx", "main"]'), github.head_ref) }}
    runs-on: ${{ inputs.RUNS_ON }}
    container: f3capital/aquario:latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ inputs.CANCEL_IN_PROGRESS }}

    env:
      DATABASE_NAME: ${{vars.DATABASE_NAME_DEV}}
      DATABASE_HOST: ${{vars.DATABASE_HOST_DEV}}
      DATABASE_USERNAME: ${{vars.DATABASE_USERNAME_DEV}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD_DEV}}

      KEYCLOAK_URL: ${{vars.KEYCLOAK_URL_DEV}}
      KEYCLOAK_PASSWORD_ADMIN: ${{secrets.KEYCLOAK_PASSWORD_ADMIN_DEV}}
      KEYCLOAK_USERNAME_ADMIN: ${{vars.KEYCLOAK_USERNAME_ADMIN_DEV}}
      KEYCLOAK_USERNAME_TEST: ${{vars.KEYCLOAK_USERNAME_TEST}}
      KEYCLOAK_PASSWORD_TEST: ${{secrets.KEYCLOAK_PASSWORD_TEST}}
      KEYCLOAK_CLIENT_SECRET_TEST: ${{secrets.KEYCLOAK_CLIENT_SECRET_TEST}}

      ENV: ${{ vars.ENV_DEV }}
      DD_ENV: ${{ vars.ENV_DEV }}

      # TODO: Remover o PROXY_CONNECTOR quando não for mais necessário
      PROXY_CONNECTOR: ${{secrets.PROXY_CONNECTOR_DEV}}

      AWS_REGION: ${{vars.AWS_REGION_DEV}}
      AWS_ACCESS_KEY_ID: ${{vars.AWS_ACCESS_KEY_ID_DEV}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY_DEV}}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17

      - name: Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          npm config set registry ${{vars.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '//f3capital.jfrog.io/artifactory/api/npm/f3capital-npm/:_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{vars.ARTIFACTORY_EMAIL}}"
          echo "always-auth=true" >> ~/.npmrc
          yarn install

      - name: Lint
        if: ${{ !inputs.SKIP_LINT }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn lint

      - name: Audit
        if: ${{ !inputs.SKIP_AUDIT }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn audit --groups dependencies

      - name: Tests
        if: ${{ !inputs.SKIP_TESTS }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn test

      - name: Sonarqube
        continue-on-error: ${{ inputs.CONTINUE_ON_SONARQUBE_ERROR }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn sonar -Dsonar.host.url=${{ vars.SQ_URL }} -Dsonar.login='${{ secrets.SQ_LOGIN }}' -Dsonar.sourceEncoding=UTF-8
