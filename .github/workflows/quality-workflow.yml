name: quality-workflow

on:
  workflow_call:
    inputs:
      CANCEL_IN_PROGRESS:
        type: boolean
        default: true
      SKIP_LINT:
        type: boolean
        default: false
      SKIP_AUDIT:
        type: boolean
        default: false
      SKIP_TESTS:
        type: boolean
        default: false
      CONTINUE_ON_SONARQUBE_ERROR:
        type: boolean
        default: false
      WORKING_DIRECTORY:
        type: string

jobs:
  quality:
    if: ${{ !contains(fromJson('["dev", "stg", "sbx", "main"]'), github.head_ref) }}
    runs-on: ubuntu-latest
    container: f3capital/aquario:latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ inputs.CANCEL_IN_PROGRESS }}
      
    env:
      DATABASE_NAME: ${{secrets.DATABASE_NAME_DEV}}
      DATABASE_HOST: ${{secrets.DATABASE_HOST_DEV}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME_DEV}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD_DEV}}
     
      KEYCLOAK_URL: ${{secrets.KEYCLOAK_URL_DEV}}
      KEYCLOAK_PASSWORD_ADMIN: ${{secrets.KEYCLOAK_PASSWORD_ADMIN_DEV}}
      KEYCLOAK_USERNAME_ADMIN: ${{secrets.KEYCLOAK_USERNAME_ADMIN_DEV}}
      KEYCLOAK_USERNAME_TEST: ${{secrets.KEYCLOAK_USERNAME_TEST}}
      KEYCLOAK_PASSWORD_TEST: ${{secrets.KEYCLOAK_PASSWORD_TEST}}
      KEYCLOAK_CLIENT_SECRET_TEST: ${{secrets.KEYCLOAK_CLIENT_SECRET_TEST}}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo artifact: ${{secrets.ARTIFACTORY_NPM_REGISTRY}}
          echo sq login ${{secrets.SQ_LOGIN}}
          echo dd ${{secrets.DD_NAVEGA_PORTAL_APPLICATION_ID_SBX}}
          npm config set registry ${{secrets.ARTIFACTORY_NPM_REGISTRY}}
          npm config set -- '_auth' "${{secrets.ARTIFACTORY_AUTH}}"
          npm config set -- 'email' "${{secrets.ARTIFACTORY_EMAIL}}"
          npm config set -- 'always-auth' "true"
          yarn install
          
      - name: Lint
        if: ${{ !inputs.SKIP_LINT }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn lint
          
      - name: Audit
        if: ${{ !inputs.SKIP_AUDIT }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn audit --groups dependencies
          
      - name: Tests
        if: ${{ !inputs.SKIP_TESTS }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          yarn test
          
      - name: Sonarqube
        continue-on-error: ${{ inputs.CONTINUE_ON_SONARQUBE_ERROR }}
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: yarn sonar -Dsonar.host.url=https://sonar.navega.com.vc -Dsonar.login='${{secrets.SQ_LOGIN}}' -Dsonar.sourceEncoding=UTF-8
